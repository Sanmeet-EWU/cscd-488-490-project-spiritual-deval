
@page "/admin/event/create"
@layout MainLayout
@rendermode InteractiveServer
<h3>Create New Event</h3>
<EditForm Model="eventModel" OnValidSubmit="HandleValidSubmit">
   
    <div class="form-group">
        <label for="EventTitle">Event Title</label>
        <InputText id="EventTitle" class="form-control" @bind-Value="eventModel.EventTitle" />
    </div>
    <div class="form-group">
        <label for="EventDescription">Event Description</label>
        <InputTextArea id="EventDescription" class="form-control" @bind-Value="eventModel.EventDescription" />
    </div>
    <div class="form-group">
        <label for="EventDate">Event Date</label>
        <InputDate id="EventDate" class="form-control" @bind-Value="eventModel.EventDate" />
    </div>
    <div class="form-group">
        <label for="EventLocation">Event Location</label>
        <InputText id="EventLocation" class="form-control" @bind-Value="eventModel.EventLocation" />
    </div>
    <div class="form-group">
        <label for="MaxParticipants">Max Participants</label>
        <InputNumber id="MaxParticipants" class="form-control" @bind-Value="eventModel.MaxParticipants" />
    </div>
    <div class="form-group">
        <label for="VolunteersRequired">Volunteers Required</label>
        <InputNumber id="VolunteersRequired" class="form-control" @bind-Value="eventModel.VolunteersRequired" />
    </div>
    <div class="form-group">
        <label for="SkillsRequired">Skills Required</label>
        <InputText id="SkillsRequired" class="form-control" @bind-Value="eventModel.SkillsRequired" />
    </div>
    <button type="submit" class="btn btn-primary">Create Event</button>
</EditForm>
@code {
    private Event eventModel = new Event();
    private async Task HandleValidSubmit()
    {
        // Save the new event to the database
        await DbContext.Events.AddAsync(eventModel);
        await DbContext.SaveChangesAsync();
        // Optionally, redirect to another page or show a success message
        // NavigationManager.NavigateTo("/admin/events");
    }
     [Inject]
    private AppDbContext DbContext { get; set; }
}
