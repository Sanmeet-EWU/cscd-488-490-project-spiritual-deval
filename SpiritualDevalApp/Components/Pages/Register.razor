@page "/register"
@using Microsoft.AspNetCore.Identity
@using System.ComponentModel.DataAnnotations
@inject UserManager<IdentityUser> _userManager
@inject NavigationManager _navigationManager

<h3>Register</h3>

<EditForm Model="registrationModel" OnValidSubmit="HandleRegister">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="Username">Username</label>
        <InputText id="Username" class="form-control" @bind="registrationModel.Username" />
    </div>
    <div class="form-group">
        <label for="Email">Email</label>
        <InputText id="Email" class="form-control" @bind="registrationModel.Email" />
    </div>
    <div class="form-group">
        <label for="Password">Password</label>
        <InputPassword id="Password" class="form-control" @bind="registrationModel.Password" />
    </div>
    <div class="form-group">
        <label for="ConfirmPassword">Confirm Password</label>
        <InputPassword id="ConfirmPassword" class="form-control" @bind="registrationModel.ConfirmPassword" />
    </div>

    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

@code {
    private RegistrationModel registrationModel = new RegistrationModel();

    private async Task HandleRegister()
    {
        if (registrationModel.Password != registrationModel.ConfirmPassword)
        {
            Console.WriteLine("Passwords do not match.");
            return;
        }

        var user = new IdentityUser
        {
            UserName = registrationModel.Username,
            Email = registrationModel.Email
        };

        var result = await _userManager.CreateAsync(user, registrationModel.Password);

        if (result.Succeeded)
        {
            Console.WriteLine("Registration successful!");
            _navigationManager.NavigateTo("/login"); // Redirect to login page
        }
        else
        {
            foreach (var error in result.Errors)
            {
                Console.WriteLine($"Error: {error.Description}");
            }
        }
    }

    public class RegistrationModel
    {
        [Required]
        public string Username { get; set; }
        [Required]
        [EmailAddress]
        public string Email { get; set; }
        [Required]
        public string Password { get; set; }
        [Required]
        public string ConfirmPassword { get; set; }
    }
}