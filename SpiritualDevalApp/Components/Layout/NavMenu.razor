@using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider

<nav class="nav-bar">
    <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
        <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
    </NavLink>

    <NavLink class="nav-link" href="about">
        <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> About
    </NavLink>

    <NavLink class="nav-link" href="donation">
        <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Donation
    </NavLink>

    <NavLink class="nav-link" href="volunteer">
        <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Volunteer
    </NavLink>

    <NavLink class="nav-link" href="contact">
        <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Contact
    </NavLink>

    @if (!isAuthenticated)
    {
        <NavLink class="nav-link" href="login">
            <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Login
        </NavLink>
    }
    else
    {
        <NavLink class="nav-link" href="logout">
            <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Logout
        </NavLink>
    }
</nav>

@code {
    private bool isAuthenticated;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        isAuthenticated = authState.User.Identity?.IsAuthenticated ?? false;
    }
}